% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install_requirements.R
\name{install_requirements}
\alias{install_requirements}
\title{Install packages by versions specified in the requirements-file}
\usage{
install_requirements(
  cran.mirror = "https://cloud.r-project.org/",
  archiv.path = "src/contrib/Archive/",
  main.path = "src/contrib/",
  repo = "cran",
  req.file.path = getwd(),
  req.file.name = "requirements.txt",
  lists = "all",
  library.folder.path = getwd(),
  library.folder.name = "lib",
  use.only.lib.install.path = TRUE,
  auto.update.version.in.files = TRUE
)
}
\arguments{
\item{cran.mirror}{(chr value): Main url of the cran mirror to use (e.g. "https://cloud.r-project.org/")}

\item{archiv.path}{(chr value): URL-path to the archive of the cran mirror to use (e.g. "src/contrib/Archive/")}

\item{main.path}{(chr value): URL-path to the pages main page of the cran mirror to use (e.g. "src/contrib/"")}

\item{repo}{(chr value): Which type of repo is used? This information is utilized when building the URL,
because each repo has its own file structure. Currently supported: "cran" & "nexus"}

\item{req.file.path}{(chr value): Name of the requirements-file}

\item{req.file.name}{(chr value): Folder of the requirements-file}

\item{lists}{(chr vector): Names of lists (without '#' !) specified in the requirements-file to use}

\item{library.folder.path}{(chr value): Folder in which the subfolder "lib" should be created}

\item{library.folder.name}{(chr value): Name of the lib-folder}

\item{use.only.lib.install.path}{(bool): Only check in <lib.install.path> for installed packages and dependencies}

\item{auto.update.version.in.files}{(bool):
If TRUE the version of a package in the installed files will be changed to the required version. This only happens if
it's the same version but the structure of the version name differs e.g. 0.1.10 to 0.1.-1 see \code{\link[pama]{find_package_version_on_cran}}
When FALSE nothing happens}
}
\description{
Install packages by versions specified in the requirements-file
}
\details{
Wrapper around get_requirements() and install_package_version(). Installs all packages from the requirements-file (+ dependencies) in a lib-folder.
}
\section{Dependencies}{

- get_requirements()

- get_installed_packages()

- install_package_version()

- detach_none_base()
}

\section{Side effects}{
 Installation of the package & adding package location to the search paths
}

\section{Return}{
 None
}

\examples{
\dontrun{
# use 'requirements.txt.' within the current working directory
install_requirements()

# use 'req.txt' within the lib folder of the current working directory
install_requirements(req.file.path=paste(getwd(),"lib",sep="/"),
                     req.file.name="requirements.txt",
                     lists="all",
                     library.folder.path=getwd(),
                     library.folder.name="lib")
}

}
\seealso{
\code{\link[base]{.libPaths}}
}
\author{
Simon Ress
}
\keyword{installing}
\keyword{package-versions}
\keyword{requirements-file}
