% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setupLibrary.R
\name{setupLibrary}
\alias{setupLibrary}
\title{Creation of a new library folder (incl. stand. packages)}
\usage{
setupLibrary(
  new.lib = NULL,
  main.lib.path = paste0(R.home(), "/library"),
  standard_packages = c("base", "compiler", "datasets", "grDevices", "graphics", "grid",
    "methods", "parallel", "splines", "stats", "stats4", "tcltk", "tools", "utils")
)
}
\arguments{
\item{new.lib}{(chr): Path of the new library-folder to be created (e.g. "C:/Users/Simon/Documents/NewProject/lib")}

\item{main.lib.path}{(chr): Path of the library-folder within R Home Directory (Attention: Specify path to correct R version, if more than one exists)}

\item{standard_packages}{(chr vector): The standard R packages which should be taken over from the existing R installation (hint: stay with the \href{https://cran.r-project.org/doc/manuals/r-release/R-FAQ.html#Which-add_002don-packages-exist-for-R_003f}{"Add-on packages in R"}.)}
}
\description{
Creates a new library folder in a specified directory to which
all "standard R packages" are copied. This library folder can be used as a
stand-alone project library for package version control with the \link{pama}-package.
}
\section{Dependencies}{
 NONE
}

\section{Side effects}{
 (1.) Creating a new library folder in the specified directory and (2.) copying all "standard R packages" into it.
}

\section{Return}{
 NONE
}

\examples{
\dontrun{
# Creating a new "lib"-folder and using the library of the running R version as the source of the standard packages to be copied
setupLibrary(new.lib="C:/Users/Simon/Documents/NewProject/lib")
}

}
\seealso{
`browseVignettes("pama")`, `help(package = "pama")`
}
\author{
Simon Ress
}
\keyword{default}
\keyword{folder}
\keyword{library}
